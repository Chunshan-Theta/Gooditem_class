# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Message(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, request_status: str='success',msg: str="message empty"):  # noqa: E501
        """Message - a model defined in Swagger

        :param request_status: The request_status of this Message.  # noqa: E501
        :type request_status: str
        """
        self.swagger_types = {
            'request_status': str
        }

        self.attribute_map = {
            'request_status': 'request_status'
        }

        self._request_status = request_status
        self.msg = msg
    def to_dict(self):
        return {
            "request_status": self.request_status,
            "message": self.msg
        }

    @classmethod
    def from_dict(cls, dikt) -> 'Message':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The message of this Message.  # noqa: E501
        :rtype: Message
        """
        return util.deserialize_model(dikt, cls)

    @property
    def request_status(self) -> str:
        """Gets the request_status of this Message.


        :return: The request_status of this Message.
        :rtype: str
        """
        return self._request_status

    @request_status.setter
    def request_status(self, request_status: str):
        """Sets the request_status of this Message.


        :param request_status: The request_status of this Message.
        :type request_status: str
        """
        allowed_values = ["success", "error", "warring"]  # noqa: E501
        if request_status not in allowed_values:
            raise ValueError(
                "Invalid value for `request_status` ({0}), must be one of {1}"
                .format(request_status, allowed_values)
            )

        self._request_status = request_status
